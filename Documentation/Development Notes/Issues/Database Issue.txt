Database Issue

    Problem:        Clicking on the link to the bug tracker loads a blank screen

    Observations:   Table tracking the submitted bugs no longer displays.
                    The table displayed earlier and stopped at some point.
                    I made a few changes to the project that worked but didn't realize the table wasn't working.
                    Didn't know what caused the problem, so I tried to backtrack changes and check if I did anything wrong.
                    Redoing multiple steps didn't fix the issue.
                    No error messages occur on the page or app itself.
                    No bugs have been added to the database yet.
                    No users have been added to the database yet.
                    The users table displays just fine.
                    Changes to Razor/HTML don't display at all.
                    Something is causing the entire page to not render, not just the table.
                    Checked if C# "DateTime" type was unable to be converted to SQL.
                    Temporarily removing DateTime didn't resolve the issue.
        
    Revelations:    Didn't initially realize that I overlooked a message in the debugger.
                    Page wasn't displaying an error but the debugger showed one when I focused on the page.
                    A Google search revealed that the error was caused by mismatched table names from a faulty migration.
                    Checking the database, I realized that it no longer had tables I thought were there.
                    Deleting existing migrations and regenerating would solve the problem.

    Conclusions:    I forgot to double check the database after regenerating it.
                    The existing migrations were conflicting so the tables weren't being generated (I think?)
                    Because the tables weren't generating, the controller had no where to draw the bugs from.
                    Because the controller had nowhere to draw the bugs from, it wasn't instantiating the necessary objects.
                    The users table was fine, hence why it displayed the empty table.
                    Deleting then regenerating made sure the tables be generated as needed.
       
    Actions:        Delete contents of migration folder.
                    Perform new migration.

    Lessons:        When migrating tables, delete migrations first.
                    In the mean time, study what migrations entail so I can simplify the process and know the pitfalls.
                    Alternatively, it's easier to manage the database by hand.

    Overview:       At one point, I deleted the existing (empty) database to update the fields for the user table.
                    I could have updated the schema myself in SQL but was practicing migrating the database from classes.
                    My understanding of migration was flawed, so I didn't realize I'd messed it up.
                    When I deleted the database, I deleted the migration function I'd autogenerated earlier.
                    I didn't delete the other migration methods because I thought they were part of ASP.NET.